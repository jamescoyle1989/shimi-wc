{"version":3,"file":"ScalePicker.stories-b374a8ad.js","sources":["../../src/scale-picker.ts"],"sourcesContent":["import { LitElement, html } from 'lit';\r\nimport { customElement, property, state } from 'lit/decorators.js';\r\nimport { Scale, ScaleTemplate } from 'shimi';\r\n\r\n@customElement('scale-picker')\r\nexport class ScalePicker extends LitElement {\r\n    \r\n    @property()\r\n    scaleTemplates: Array<ScaleTemplate> = [];\r\n\r\n    @state()\r\n    private _selectedScaleTemplate: ScaleTemplate | null = null;\r\n\r\n    @state()\r\n    private _scales: Array<Scale> = [];\r\n\r\n    @state()\r\n    private _selectedScale: Scale | null = null;\r\n\r\n    /** When scale template is changed, update available scales and clear out any currently selected scale */\r\n    private _onSelectedScaleTemplateChange(evt: Event): void {\r\n        const select = evt.target as HTMLSelectElement;\r\n        this._selectedScaleTemplate = this.scaleTemplates.find(x => x.name == select.value) ?? null;\r\n        this._recalculateScales();\r\n        this._selectedScale = null;\r\n    }\r\n\r\n    /** Recalculates the collection of available scales to choose from */\r\n    private _recalculateScales(): void {\r\n        const result = [];\r\n        if (this._selectedScaleTemplate) {\r\n            for (let i = 0; i < 12; i++)\r\n                result.push(this._selectedScaleTemplate.create(i));\r\n        }\r\n        this._scales = result;\r\n    }\r\n\r\n    /** When scale is changed, dispatches scale-change event */\r\n    private _onSelectedScaleChange(evt: Event): void {\r\n        const select = evt.target as HTMLSelectElement;\r\n        this._selectedScale = this._scales\r\n            .find(scale => scale.root.toString() == select.value) ?? null;\r\n        this.dispatchEvent(new CustomEvent('scale-change', {\r\n            detail: this._selectedScale,\r\n            bubbles: true,\r\n            composed: true\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n        return html`\r\n            <select @change=${me._onSelectedScaleTemplateChange}>\r\n                <option></option>\r\n                ${this.scaleTemplates.map(x => html`\r\n                    <option>${x.name}</option>\r\n                `)}\r\n            </select>\r\n\r\n            <select @change=${me._onSelectedScaleChange}>\r\n                <option ?selected=${!me._selectedScale}></option>\r\n                ${this._scales.map(scale => html`\r\n                    <option value=${scale.root}>${scale.getPitchName(scale.root, false)}</option>\r\n                `)}\r\n            </select>\r\n        `;\r\n    }\r\n\r\n    /** This causes the component to be rendered in the light DOM. Meaning that the basic layout of the picker can be more easily styled. */\r\n    protected createRenderRoot(): Element | ShadowRoot {\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'scale-picker': ScalePicker\r\n    }\r\n}"],"names":["ScalePicker","LitElement","evt","select","x","result","i","scale","me","html","__decorateClass","property","state","customElement"],"mappings":"0aAKa,IAAAA,EAAN,cAA0BC,CAAW,CAArC,aAAA,CAAA,MAAA,GAAA,SAAA,EAGH,KAAA,eAAuC,GAGvC,KAAQ,uBAA+C,KAGvD,KAAQ,QAAwB,GAGhC,KAAQ,eAA+B,IAAA,CAG/B,+BAA+BC,EAAkB,CACrD,MAAMC,EAASD,EAAI,OACd,KAAA,uBAAyB,KAAK,eAAe,QAAUE,EAAE,MAAQD,EAAO,KAAK,GAAK,KACvF,KAAK,mBAAmB,EACxB,KAAK,eAAiB,IAC1B,CAGQ,oBAA2B,CAC/B,MAAME,EAAS,CAAA,EACf,GAAI,KAAK,uBACI,QAAAC,EAAI,EAAGA,EAAI,GAAIA,IACpBD,EAAO,KAAK,KAAK,uBAAuB,OAAOC,CAAC,CAAC,EAEzD,KAAK,QAAUD,CACnB,CAGQ,uBAAuBH,EAAkB,CAC7C,MAAMC,EAASD,EAAI,OACd,KAAA,eAAiB,KAAK,QACtB,KAAKK,GAASA,EAAM,KAAK,SAAS,GAAKJ,EAAO,KAAK,GAAK,KACxD,KAAA,cAAc,IAAI,YAAY,eAAgB,CAC/C,OAAQ,KAAK,eACb,QAAS,GACT,SAAU,EACb,CAAA,CAAC,CACN,CAEA,QAAS,CACL,MAAMK,EAAK,KACJ,OAAAC;AAAAA,8BACeD,EAAG,8BAA8B;AAAA;AAAA,kBAE7C,KAAK,eAAe,IAASJ,GAAAK;AAAAA,8BACjBL,EAAE,IAAI;AAAA,iBACnB,CAAC;AAAA;AAAA;AAAA,8BAGYI,EAAG,sBAAsB;AAAA,oCACnB,CAACA,EAAG,cAAc;AAAA,kBACpC,KAAK,QAAQ,IAAaD,GAAAE;AAAAA,oCACRF,EAAM,IAAI,IAAIA,EAAM,aAAaA,EAAM,KAAM,EAAK,CAAC;AAAA,iBACtE,CAAC;AAAA;AAAA,SAGd,CAGU,kBAAyC,CACxC,OAAA,IACX,CAEJ,EAjEIG,EAAA,CADCC,EAAS,CAAA,EAFDX,EAGT,UAAA,iBAAA,CAAA,EAGQU,EAAA,CADPE,EAAM,CAAA,EALEZ,EAMD,UAAA,yBAAA,CAAA,EAGAU,EAAA,CADPE,EAAM,CAAA,EAREZ,EASD,UAAA,UAAA,CAAA,EAGAU,EAAA,CADPE,EAAM,CAAA,EAXEZ,EAYD,UAAA,iBAAA,CAAA,EAZCA,EAANU,EAAA,CADNG,EAAc,cAAc,CAAA,EAChBb,CAAA;;;;;;"}